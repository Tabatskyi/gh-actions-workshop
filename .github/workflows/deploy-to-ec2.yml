name: Deploy to EC2

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Save Docker image
      run: |
        docker pull ghcr.io/tabatskyi/gh-actions-workshop:fb0533f || docker build -t ghcr.io/tabatskyi/gh-actions-workshop:fb0533f
        docker save -o rocketdex-image.tar ghcr.io/tabatskyi/gh-actions-workshop:fb0533f

    - name: Copy Docker image to EC2
      run: |
        echo "$EC2_SSH_KEY" > ~/key.pem
        chmod 600 ~/key.pem
        scp -o StrictHostKeyChecking=no -i ~/key.pem rocketdex-image.tar ubuntu@$EC2_PUBLIC_IP:/home/ubuntu/

    - name: Load image into Minikube
      run: |
        ssh -T -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i ~/key.pem ubuntu@$EC2_PUBLIC_IP << 'EOF'
          sudo minikube ssh "docker load < /home/ubuntu/rocketdex-image.tar"
          sudo minikube ssh "docker images | grep rocketdex"
          echo "Docker image loaded into Minikube container runtime"
        EOF

    - name: Copy manifests to EC2
      run: scp -o StrictHostKeyChecking=no -i ~/key.pem k8s/*.yml ubuntu@$EC2_PUBLIC_IP:/home/ubuntu/

    - name: Apply Kubernetes manifests to Minikube
      run: |
        ssh -T -o StrictHostKeyChecking=no -i ~/key.pem ubuntu@$EC2_PUBLIC_IP << 'EOF'
          sudo minikube kubectl -- apply -f /home/ubuntu/rocketdex-deployment.yml
          sudo minikube kubectl -- apply -f /home/ubuntu/rocketdex-service.yml
          echo "Kubernetes manifests applied"
        EOF

    - name: Verify Pods
      run: |
        ssh -T -o StrictHostKeyChecking=no -i ~/key.pem ubuntu@$EC2_PUBLIC_IP << 'EOF'
          sudo minikube kubectl -- get pods -A
        EOF
